/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 .\\public\\shirt_baked.glb --types --transform
*/

import * as THREE from "three";
import { Decal, useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
import { easing } from "maath";
import { useContext } from "react";
import { TshirtContext } from "@/app/context/ThshirtContext";
import { TshirtContextType } from "@/types/ThishirtContextType";

type GLTFResult = GLTF & {
  nodes: {
    T_Shirt_male: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};
const shirtModelPath = "/shirt_baked.glb";

export default function TShirt() {
  const { settings } = useContext(TshirtContext) as TshirtContextType;
  const logoTexture = useTexture("/test.png");

  useFrame((state, delta) => {
    easing.dampC(materials.lambert1.color, settings.color, 0.25, delta);
  });

  const { nodes, materials } = useGLTF(shirtModelPath) as GLTFResult;
  return (
    <group key={JSON.stringify(logoTexture)}>
      <mesh
        material-roughness={1}
        dispose={null}
        castShadow
        geometry={nodes.T_Shirt_male.geometry}
        material={materials.lambert1}
        scale={[1, 1, 1]}
      >
        <Decal
          position={[0, 0.04, 0.15]}
          rotation={[0, 0, 0]}
          scale={0.15}
          map={logoTexture}
        />
      </mesh>
    </group>
  );
}
useGLTF.preload(shirtModelPath);
